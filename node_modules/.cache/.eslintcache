[{"C:\\Users\\97250\\zigit\\src\\index.js":"1","C:\\Users\\97250\\zigit\\src\\App.js":"2","C:\\Users\\97250\\zigit\\src\\store.js":"3","C:\\Users\\97250\\zigit\\src\\reportWebVitals.js":"4","C:\\Users\\97250\\zigit\\src\\modules\\InfoPage\\projectsSlice.js":"5","C:\\Users\\97250\\zigit\\src\\modules\\LoginPage\\authSlice.js":"6","C:\\Users\\97250\\zigit\\src\\modules\\LoginPage\\LoginPage.jsx":"7","C:\\Users\\97250\\zigit\\src\\modules\\InfoPage\\InfoPage.jsx":"8","C:\\Users\\97250\\zigit\\src\\utils\\apiClient.js":"9","C:\\Users\\97250\\zigit\\src\\utils\\formValidations.js":"10","C:\\Users\\97250\\zigit\\src\\modules\\InfoPage\\projectsStats.js":"11"},{"size":614,"mtime":1613823351000,"results":"12","hashOfConfig":"13"},{"size":936,"mtime":1613847669697,"results":"14","hashOfConfig":"13"},{"size":280,"mtime":1613828279000,"results":"15","hashOfConfig":"13"},{"size":362,"mtime":1613809468000,"results":"16","hashOfConfig":"13"},{"size":879,"mtime":1613831203000,"results":"17","hashOfConfig":"13"},{"size":1233,"mtime":1613847827725,"results":"18","hashOfConfig":"13"},{"size":2889,"mtime":1613847298347,"results":"19","hashOfConfig":"13"},{"size":6701,"mtime":1613844140010,"results":"20","hashOfConfig":"13"},{"size":510,"mtime":1613831202000,"results":"21","hashOfConfig":"13"},{"size":695,"mtime":1613829388000,"results":"22","hashOfConfig":"13"},{"size":513,"mtime":1613840689664,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"7bqvg0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"C:\\Users\\97250\\zigit\\src\\index.js",[],["49","50"],"C:\\Users\\97250\\zigit\\src\\App.js",[],"C:\\Users\\97250\\zigit\\src\\store.js",[],"C:\\Users\\97250\\zigit\\src\\reportWebVitals.js",[],"C:\\Users\\97250\\zigit\\src\\modules\\InfoPage\\projectsSlice.js",[],"C:\\Users\\97250\\zigit\\src\\modules\\LoginPage\\authSlice.js",[],"C:\\Users\\97250\\zigit\\src\\modules\\LoginPage\\LoginPage.jsx",[],"C:\\Users\\97250\\zigit\\src\\modules\\InfoPage\\InfoPage.jsx",["51"],"import AppBar from \"@material-ui/core/AppBar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport MaUTable from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useFilters, useSortBy, useTable } from \"react-table\";\nimport \"./InfoPage.css\";\nimport { getProjects } from \"./projectsSlice\";\nimport {\n  calculateAvgScore,\n  calculatePercentageOfMadeDeadline,\n} from \"./projectsStats\";\n\n// this is the default component that is used to filter a given column\n// a simple text box..\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length;\n\n  return (\n    <TextField\n      value={filterValue || \"\"}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Search ${count} records...`}\n    />\n  );\n}\n\n// deadline column is of boolean value, so the default text based filter is not sufficient here..\nfunction DeadlineColumnFilter({ column: { filterValue, setFilter } }) {\n  return (\n    <Select\n      value={filterValue}\n      onChange={(e) => {\n        setFilter(e.target.value || \"\"); // Set \"\" to remove the filter entirely\n      }}\n    >\n      <MenuItem value={\"\"}>All</MenuItem>\n      <MenuItem value={\"true\"}>Yes</MenuItem>\n      <MenuItem value={\"false\"}>No</MenuItem>\n    </Select>\n  );\n}\n\nfunction ProjectsTable({ columns, data }) {\n  // uses react-table hook api to generate table\n  const table = useTable(\n    {\n      columns,\n      data,\n      defaultColumn: {\n        Filter: DefaultColumnFilter,\n      },\n    },\n    useFilters,\n    useSortBy\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n\n    rows,\n    prepareRow,\n  } = table;\n\n  return (\n    <>\n      <div className=\"cards-container\">\n        <div>\n          <label>Average Score: </label>\n          <span>{calculateAvgScore(rows.map((row) => row.values))}</span>\n        </div>{\" \"}\n        |\n        <div>\n          <label>Percentage Of Projects Made Deadline: </label>\n          <span>\n            {calculatePercentageOfMadeDeadline(rows.map((row) => row.values))}%\n          </span>\n        </div>\n      </div>\n\n      <Card>\n        <MaUTable {...getTableProps()}>\n          <TableHead>\n            {headerGroups.map((headerGroup) => (\n              <TableRow>\n                {headerGroup.headers.map((column) => (\n                  <TableCell {...column.getHeaderProps()}>\n                    <div {...column.getSortByToggleProps()}>\n                      {column.render(\"Header\")}\n                      <span>\n                        {column.isSorted ? (\n                          column.isSortedDesc ? (\n                            <ArrowDropDownIcon />\n                          ) : (\n                            <ArrowDropUpIcon />\n                          )\n                        ) : (\n                          \"\"\n                        )}\n                      </span>\n                    </div>\n\n                    <div>\n                      {column.canFilter ? column.render(\"Filter\") : null}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableHead>\n          <TableBody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n              prepareRow(row);\n              return (\n                <TableRow\n                  {...row.getRowProps({\n                    style: {\n                      background: getRowColor(row.values.score),\n                    },\n                  })}\n                >\n                  {row.cells.map((cell) => {\n                    return (\n                      <TableCell {...cell.getCellProps()}>\n                        {cell.render(\"Cell\")}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </MaUTable>\n      </Card>\n    </>\n  );\n}\n\n// Change row color based on score\nfunction getRowColor(score) {\n  if (score < 70) {\n    return \"#e03e3e\";\n  } else if (score > 90) {\n    return \"#24d432\";\n  }\n}\n\nfunction ProjectsInfoPage() {\n  const dispatch = useDispatch();\n  const userData = useSelector((state) => state.auth.userData.personalDetails);\n  const isProjectsInfoLoading = useSelector(\n    (state) => state.projects.isLoading\n  );\n  const projectsData = useSelector((state) => state.projects.projects);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Id\",\n        accessor: \"id\",\n      },\n      {\n        Header: \"Score\",\n        accessor: \"score\",\n      },\n      {\n        Header: \"Duration In Days\",\n        accessor: \"durationInDays\",\n      },\n      {\n        Header: \"Made Deadline\",\n        accessor: \"madeDadeline\",\n        Cell: ({ value }) => <>{value ? \"Yes\" : \"No\"}</>,\n        Filter: DeadlineColumnFilter,\n      },\n    ],\n    []\n  );\n\n  useEffect(() => {\n    dispatch(getProjects());\n  }, []);\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <div class=\"user-info\">\n            <Avatar src={userData.avatar} />\n            <div className=\"user-info-section\">\n              <label>Name: </label>\n              <span>{userData.name}</span>\n            </div>\n            |\n            <div className=\"user-info-section\">\n              <label>Team: </label>\n              <span>{userData.Team}</span>\n            </div>\n            |\n            <div className=\"user-info-section\">\n              <label>Joined At: </label>\n              <span>{userData.joinedAt}</span>\n            </div>\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      {isProjectsInfoLoading ? (\n        <CircularProgress color=\"secondary\" />\n      ) : (\n        <>\n          <Card></Card>\n          <ProjectsTable columns={columns} data={projectsData} />;\n        </>\n      )}\n    </>\n  );\n}\n\nexport default ProjectsInfoPage;\n","C:\\Users\\97250\\zigit\\src\\utils\\apiClient.js",[],"C:\\Users\\97250\\zigit\\src\\utils\\formValidations.js",[],"C:\\Users\\97250\\zigit\\src\\modules\\InfoPage\\projectsStats.js",["52","53"],"export function calculateAvgScore(projects) {\n  const scoreSum = projects.reduce((sum, current) => (sum += current.score), 0);\n  return projects.length != 0 ? (scoreSum / projects.length).toFixed(2) : 0;\n}\n\nexport function calculatePercentageOfMadeDeadline(projects) {\n  const countOfProjectsThatMadeDeadline = projects.filter(\n    (row) => row.madeDadeline\n  );\n\n  return projects.length != 0\n    ? (\n        (countOfProjectsThatMadeDeadline.length / projects.length) *\n        100\n      ).toFixed(2)\n    : 0;\n}\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":204,"column":6,"nodeType":"60","endLine":204,"endColumn":8,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":26,"nodeType":"64","messageId":"65","endLine":3,"endColumn":28},{"ruleId":"62","severity":1,"message":"63","line":11,"column":26,"nodeType":"64","messageId":"65","endLine":11,"endColumn":28},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["68"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [dispatch]",{"range":"71","text":"72"},[5755,5757],"[dispatch]"]