{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97250\\\\zigit\\\\src\\\\modules\\\\InfoPage\\\\InfoPage.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport MaUTable from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useFilters, useSortBy, useTable } from \"react-table\";\nimport \"./InfoPage.css\";\nimport { getProjects } from \"./projectsSlice\";\nimport { calculateAvgScore, calculatePercentageOfMadeDeadline } from \"./projectsStats\"; // this is the default component that is used to filter a given column\n// a simple text box..\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DefaultColumnFilter({\n  column: {\n    filterValue,\n    preFilteredRows,\n    setFilter\n  }\n}) {\n  const count = preFilteredRows.length;\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    value: filterValue || \"\",\n    onChange: e => {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    placeholder: `Search ${count} records...`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n} // deadline column is of boolean value, so the default text based filter is not sufficient here..\n\n\n_c = DefaultColumnFilter;\n\nfunction DeadlineColumnFilter({\n  column: {\n    filterValue,\n    setFilter\n  }\n}) {\n  return /*#__PURE__*/_jsxDEV(Select, {\n    value: filterValue,\n    onChange: e => {\n      setFilter(e.target.value || \"\"); // Set \"\" to remove the filter entirely\n    },\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"\",\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"true\",\n      children: \"Yes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"false\",\n      children: \"No\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = DeadlineColumnFilter;\n\nfunction ProjectsTable({\n  columns,\n  data\n}) {\n  _s();\n\n  // uses react-table hook api to generate table\n  const table = useTable({\n    columns,\n    data,\n    defaultColumn: {\n      Filter: DefaultColumnFilter\n    }\n  }, useFilters, useSortBy);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = table;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Average Score: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: calculateAvgScore(rows.map(row => row.values))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), \" \", \"|\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Percentage Of Projects Made Deadline: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [calculatePercentageOfMadeDeadline(rows.map(row => row.values)), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(MaUTable, { ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(TableCell, { ...column.getHeaderProps(),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", { ...column.getSortByToggleProps(),\n                children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(ArrowDropUpIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 29\n                  }, this) : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: column.canFilter ? column.render(\"Filter\") : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, { ...getTableBodyProps(),\n          children: rows.map((row, i) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(TableRow, { ...row.getRowProps({\n                style: {\n                  background: getRowColor(row.values.score)\n                }\n              }),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(TableCell, { ...cell.getCellProps(),\n                  children: cell.render(\"Cell\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} // Change row color based on score\n\n\n_s(ProjectsTable, \"J6wqgimbSa/Cs8zg/88k+HNK8UM=\", false, function () {\n  return [useTable];\n});\n\n_c3 = ProjectsTable;\n\nfunction getRowColor(score) {\n  if (score < 70) {\n    return \"red\";\n  } else if (score > 90) {\n    return \"#67e672\";\n  }\n}\n\nfunction ProjectsInfoPage() {\n  _s2();\n\n  const dispatch = useDispatch();\n  const userData = useSelector(state => state.auth.userData.personalDetails);\n  const isProjectsInfoLoading = useSelector(state => state.projects.isLoading);\n  const projectsData = useSelector(state => state.projects.projects);\n  const columns = React.useMemo(() => [{\n    Header: \"Name\",\n    accessor: \"name\"\n  }, {\n    Header: \"Id\",\n    accessor: \"id\"\n  }, {\n    Header: \"Score\",\n    accessor: \"score\"\n  }, {\n    Header: \"Duration In Days\",\n    accessor: \"durationInDays\"\n  }, {\n    Header: \"Made Deadline\",\n    accessor: \"madeDadeline\",\n    Cell: ({\n      value\n    }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: value ? \"Yes\" : \"No\"\n    }, void 0, false),\n    Filter: DeadlineColumnFilter\n  }], []);\n  useEffect(() => {\n    dispatch(getProjects());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: userData.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: userData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), \"|\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Team: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: userData.Team\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), \"|\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Joined At: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: userData.joinedAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), isProjectsInfoLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ProjectsTable, {\n        columns: columns,\n        data: projectsData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), \";\"]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s2(ProjectsInfoPage, \"AuOVbm+7hnWMo/Szwd0WoBh1rjE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c4 = ProjectsInfoPage;\nexport default ProjectsInfoPage;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DefaultColumnFilter\");\n$RefreshReg$(_c2, \"DeadlineColumnFilter\");\n$RefreshReg$(_c3, \"ProjectsTable\");\n$RefreshReg$(_c4, \"ProjectsInfoPage\");","map":{"version":3,"sources":["C:/Users/97250/zigit/src/modules/InfoPage/InfoPage.jsx"],"names":["AppBar","Avatar","Card","CircularProgress","MenuItem","Select","MaUTable","TableBody","TableCell","TableHead","TableRow","TextField","Toolbar","ArrowDropDownIcon","ArrowDropUpIcon","React","useEffect","useDispatch","useSelector","useFilters","useSortBy","useTable","getProjects","calculateAvgScore","calculatePercentageOfMadeDeadline","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","e","target","value","undefined","DeadlineColumnFilter","ProjectsTable","columns","data","table","defaultColumn","Filter","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","row","values","headerGroup","headers","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","i","getRowProps","style","background","getRowColor","score","cells","cell","getCellProps","ProjectsInfoPage","dispatch","userData","state","auth","personalDetails","isProjectsInfoLoading","projects","isLoading","projectsData","useMemo","Header","accessor","Cell","avatar","name","Team","joinedAt"],"mappings":"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","sourcesContent":["import AppBar from \"@material-ui/core/AppBar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport MaUTable from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useFilters, useSortBy, useTable } from \"react-table\";\nimport \"./InfoPage.css\";\nimport { getProjects } from \"./projectsSlice\";\nimport {\n  calculateAvgScore,\n  calculatePercentageOfMadeDeadline,\n} from \"./projectsStats\";\n\n// this is the default component that is used to filter a given column\n// a simple text box..\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length;\n\n  return (\n    <TextField\n      value={filterValue || \"\"}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Search ${count} records...`}\n    />\n  );\n}\n\n// deadline column is of boolean value, so the default text based filter is not sufficient here..\nfunction DeadlineColumnFilter({ column: { filterValue, setFilter } }) {\n  return (\n    <Select\n      value={filterValue}\n      onChange={(e) => {\n        setFilter(e.target.value || \"\"); // Set \"\" to remove the filter entirely\n      }}\n    >\n      <MenuItem value={\"\"}>All</MenuItem>\n      <MenuItem value={\"true\"}>Yes</MenuItem>\n      <MenuItem value={\"false\"}>No</MenuItem>\n    </Select>\n  );\n}\n\nfunction ProjectsTable({ columns, data }) {\n  // uses react-table hook api to generate table\n  const table = useTable(\n    {\n      columns,\n      data,\n      defaultColumn: {\n        Filter: DefaultColumnFilter,\n      },\n    },\n    useFilters,\n    useSortBy\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n\n    rows,\n    prepareRow,\n  } = table;\n\n  return (\n    <>\n      <div className=\"cards-container\">\n        <div>\n          <label>Average Score: </label>\n          <span>{calculateAvgScore(rows.map((row) => row.values))}</span>\n        </div>{\" \"}\n        |\n        <div>\n          <label>Percentage Of Projects Made Deadline: </label>\n          <span>\n            {calculatePercentageOfMadeDeadline(rows.map((row) => row.values))}%\n          </span>\n        </div>\n      </div>\n\n      <Card>\n        <MaUTable {...getTableProps()}>\n          <TableHead>\n            {headerGroups.map((headerGroup) => (\n              <TableRow>\n                {headerGroup.headers.map((column) => (\n                  <TableCell {...column.getHeaderProps()}>\n                    <div {...column.getSortByToggleProps()}>\n                      {column.render(\"Header\")}\n                      <span>\n                        {column.isSorted ? (\n                          column.isSortedDesc ? (\n                            <ArrowDropDownIcon />\n                          ) : (\n                            <ArrowDropUpIcon />\n                          )\n                        ) : (\n                          \"\"\n                        )}\n                      </span>\n                    </div>\n\n                    <div>\n                      {column.canFilter ? column.render(\"Filter\") : null}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableHead>\n          <TableBody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n              prepareRow(row);\n              return (\n                <TableRow\n                  {...row.getRowProps({\n                    style: {\n                      background: getRowColor(row.values.score),\n                    },\n                  })}\n                >\n                  {row.cells.map((cell) => {\n                    return (\n                      <TableCell {...cell.getCellProps()}>\n                        {cell.render(\"Cell\")}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </MaUTable>\n      </Card>\n    </>\n  );\n}\n\n// Change row color based on score\nfunction getRowColor(score) {\n  if (score < 70) {\n    return \"red\";\n  } else if (score > 90) {\n    return \"#67e672\";\n  }\n}\n\nfunction ProjectsInfoPage() {\n  const dispatch = useDispatch();\n  const userData = useSelector((state) => state.auth.userData.personalDetails);\n  const isProjectsInfoLoading = useSelector(\n    (state) => state.projects.isLoading\n  );\n  const projectsData = useSelector((state) => state.projects.projects);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Id\",\n        accessor: \"id\",\n      },\n      {\n        Header: \"Score\",\n        accessor: \"score\",\n      },\n      {\n        Header: \"Duration In Days\",\n        accessor: \"durationInDays\",\n      },\n      {\n        Header: \"Made Deadline\",\n        accessor: \"madeDadeline\",\n        Cell: ({ value }) => <>{value ? \"Yes\" : \"No\"}</>,\n        Filter: DeadlineColumnFilter,\n      },\n    ],\n    []\n  );\n\n  useEffect(() => {\n    dispatch(getProjects());\n  }, []);\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <div class=\"user-info\">\n            <Avatar src={userData.avatar} />\n            <div className=\"user-info-section\">\n              <label>Name: </label>\n              <span>{userData.name}</span>\n            </div>\n            |\n            <div className=\"user-info-section\">\n              <label>Team: </label>\n              <span>{userData.Team}</span>\n            </div>\n            |\n            <div className=\"user-info-section\">\n              <label>Joined At: </label>\n              <span>{userData.joinedAt}</span>\n            </div>\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      {isProjectsInfoLoading ? (\n        <CircularProgress color=\"secondary\" />\n      ) : (\n        <>\n          <Card></Card>\n          <ProjectsTable columns={columns} data={projectsData} />;\n        </>\n      )}\n    </>\n  );\n}\n\nexport default ProjectsInfoPage;\n"]},"metadata":{},"sourceType":"module"}